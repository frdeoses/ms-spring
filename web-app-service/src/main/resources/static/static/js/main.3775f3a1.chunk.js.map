{"version":3,"sources":["../node_modules/@ionic/react/node_modules/@stencil/core/internal/client lazy /^/.*$/ include: /.entry/.js$/ exclude: /.system/.entry/.js$/ groupOptions: {} namespace object","../node_modules/@stencil/core/internal/client lazy /^/.*$/ include: /.entry/.js$/ exclude: /.system/.entry/.js$/ groupOptions: {} namespace object","../node_modules/@ionic/react/node_modules/ionicons/dist/esm-es5 lazy /^/.*/.entry/.js$/ groupOptions: {} namespace object","components/Menu.tsx","pages/custumer/CustumerApp.tsx","pages/custumer/CustumerList.tsx","pages/custumer/CustumerEdit.tsx","pages/employee/EmployeeApp.tsx","pages/employee/EmployeeList.tsx","pages/employee/EmployeeEdit.tsx","pages/supplier/SupplierApp.tsx","pages/supplier/SupplierEdit.tsx","pages/supplier/SupplierList.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","map","webpackAsyncContext","__webpack_require__","o","ids","Object","appPages","title","url","iosIcon","peopleCircleOutline","mdIcon","peopleCircle","personCircle","carSharp","labels","Menu","location","useLocation","contentId","type","appPage","index","autoHide","className","pathname","routerLink","routerDirection","lines","detail","slot","ios","md","label","icon","bookmarkOutline","searchCustumers","a","process","fetch","method","headers","response","json","removeCustumer","saveCustumer","custumer","body","JSON","stringify","searchCustumerById","CustumerList","name","useParams","useState","clientes","setClientes","history","useHistory","useEffect","search","remove","res","fullscreen","collapse","size","onClick","push","color","fill","add","cliente","firstname","lastname","email","phone","address","String","pencil","close","CustumerEdit","setCustumer","routeMatch","useRouteMatch","params","save","position","onIonChange","value","checkmark","searchEmployees","removeEmployee","saveEmployee","employee","searchEmployeeById","EmployeeList","EmployeeEdit","setEmployee","salary","Number","searchSuppliers","removeSupplier","saveSupplier","supplier","searchSupplierById","SupplierEdit","setSupplier","contact","web","SupplierList","setupIonicReact","App","path","exact","to","Boolean","window","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3775f3a1.chunk.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 52;","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 53;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t80,\n\t\t12\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 54;\nmodule.exports = webpackAsyncContext;","import {\r\n  IonContent,\r\n  IonIcon,\r\n  IonItem,\r\n  IonLabel,\r\n  IonList,\r\n  IonListHeader,\r\n  IonMenu,\r\n  IonMenuToggle,\r\n  IonNote,\r\n} from \"@ionic/react\";\r\nimport {\r\n  archiveOutline,\r\n  archiveSharp,\r\n  bookmarkOutline,\r\n  carSharp,\r\n  heartOutline,\r\n  heartSharp,\r\n  mailOutline,\r\n  paperPlaneOutline,\r\n  paperPlaneSharp,\r\n  peopleCircle,\r\n  peopleCircleOutline,\r\n  peopleCircleSharp,\r\n  personCircle,\r\n  trashOutline,\r\n  trashSharp,\r\n  warningOutline,\r\n  warningSharp,\r\n} from \"ionicons/icons\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport \"./Menu.css\";\r\n\r\ninterface AppPage {\r\n  url: string;\r\n  iosIcon: string;\r\n  mdIcon: string;\r\n  title: string;\r\n}\r\n\r\nconst appPages: AppPage[] = [\r\n  {\r\n    title: \"Clientes\",\r\n    url: \"/page/custumers\",\r\n    iosIcon: peopleCircleOutline,\r\n    mdIcon: peopleCircle,\r\n  },\r\n  {\r\n    title: \"Empleados\",\r\n    url: \"/page/employees\",\r\n    iosIcon: personCircle,\r\n    mdIcon: personCircle,\r\n  },\r\n  {\r\n    title: \"Proveedores\",\r\n    url: \"/page/suppliers\",\r\n    iosIcon: carSharp,\r\n    mdIcon: carSharp,\r\n  },\r\n];\r\n\r\nconst labels = [\"Family\", \"Friends\", \"Notes\", \"Work\", \"Travel\", \"Reminders\"];\r\n\r\nconst Menu: React.FC = () => {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <IonMenu contentId=\"main\" type=\"overlay\">\r\n      <IonContent>\r\n        <IonList id=\"inbox-list\">\r\n          <IonListHeader>Inbox</IonListHeader>\r\n          <IonNote>hi@ionicframework.com</IonNote>\r\n          {appPages.map((appPage, index) => {\r\n            return (\r\n              <IonMenuToggle key={index} autoHide={false}>\r\n                <IonItem\r\n                  className={\r\n                    location.pathname === appPage.url ? \"selected\" : \"\"\r\n                  }\r\n                  routerLink={appPage.url}\r\n                  routerDirection=\"none\"\r\n                  lines=\"none\"\r\n                  detail={false}\r\n                >\r\n                  <IonIcon\r\n                    slot=\"start\"\r\n                    ios={appPage.iosIcon}\r\n                    md={appPage.mdIcon}\r\n                  />\r\n                  <IonLabel>{appPage.title}</IonLabel>\r\n                </IonItem>\r\n              </IonMenuToggle>\r\n            );\r\n          })}\r\n        </IonList>\r\n\r\n        <IonList id=\"labels-list\">\r\n          <IonListHeader>Labels</IonListHeader>\r\n          {labels.map((label, index) => (\r\n            <IonItem lines=\"none\" key={index}>\r\n              <IonIcon slot=\"start\" icon={bookmarkOutline} />\r\n              <IonLabel>{label}</IonLabel>\r\n            </IonItem>\r\n          ))}\r\n        </IonList>\r\n      </IonContent>\r\n    </IonMenu>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import Custumer from \"./Custumer\";\r\n\r\nexport async function searchCustumers() {\r\n  let url = process.env.REACT_APP_API + \"custumers\";\r\n  let response = await fetch(url, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n\r\n  return await response.json();\r\n\r\n  // if (!localStorage[\"custumers\"]) {\r\n  //   localStorage[\"custumers\"] = \"[]\";\r\n  // }\r\n  // let custumers = localStorage[\"custumers\"];\r\n\r\n  // custumers = JSON.parse(custumers);\r\n\r\n  // return custumers;\r\n}\r\n\r\nexport async function removeCustumer(id: string) {\r\n  let url = process.env.REACT_APP_API + \"custumers/\" + id;\r\n  await fetch(url, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n\r\n  //Para  Local en cache con la web\r\n  // let custumers = await searchCustumers();\r\n  // let indice = custumers.findIndex((custumer: Custumer) => custumer.id == id);\r\n  // custumers.splice(indice, 1);\r\n  // localStorage[\"custumers\"] = JSON.stringify(custumers);\r\n}\r\n\r\nexport async function saveCustumer(custumer: Custumer) {\r\n  let url = process.env.REACT_APP_API + \"custumers\";\r\n  await fetch(url, {\r\n    method: \"POST\",\r\n    body: JSON.stringify(custumer),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n\r\n  //Para  Local en cache con la web\r\n  // let custumers = await searchCustumers();\r\n\r\n  // if (custumer.id) {\r\n  //   //Editar\r\n  //   let indice = custumers.findIndex((c: Custumer) => c.id == custumer.id);\r\n  //   custumers[indice] = custumer;\r\n  // } else {\r\n  //   // Nuevo\r\n  //   custumer.id = String(Math.round(Math.random() * 100000));\r\n  //   custumers.push(custumer);\r\n  // }\r\n\r\n  // localStorage[\"custumers\"] = JSON.stringify(custumers);\r\n}\r\n\r\nexport async function searchCustumerById(id: string) {\r\n  let url = process.env.REACT_APP_API + \"custumers/\" + id;\r\n  let response = await fetch(url, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n\r\n  return await response.json();\r\n\r\n  //Para  Local en cache con la web\r\n  // let custumers = await searchCustumers();\r\n\r\n  // return custumers.find((custumer: any) => {\r\n  //   return custumer.id == id;\r\n  // });\r\n}\r\n","import {\r\n  IonButton,\r\n  IonButtons,\r\n  IonCard,\r\n  IonCol,\r\n  IonContent,\r\n  IonGrid,\r\n  IonHeader,\r\n  IonIcon,\r\n  IonItem,\r\n  IonMenuButton,\r\n  IonPage,\r\n  IonRow,\r\n  IonTitle,\r\n  IonToolbar,\r\n} from \"@ionic/react\";\r\nimport { add, close, pencil } from \"ionicons/icons\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport Custumer from \"./Custumer\";\r\nimport { removeCustumer, saveCustumer, searchCustumers } from \"./CustumerApp\";\r\n\r\nconst CustumerList: React.FC = () => {\r\n  const { name } = useParams<{ name: string }>();\r\n  const [clientes, setClientes] = useState<Custumer[]>([]);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    search();\r\n  }, [history.location.pathname]);\r\n\r\n  const remove = async (id: string) => {\r\n    await removeCustumer(id);\r\n    search();\r\n  };\r\n\r\n  const search = async () => {\r\n    let res = await searchCustumers();\r\n    setClientes(res);\r\n  };\r\n\r\n  const addCustumer = () => {\r\n    history.push(\"/page/custumer/new\");\r\n  };\r\n  const editCustumer = (id: string) => {\r\n    history.push(\"/page/custumer/\" + id);\r\n  };\r\n\r\n  return (\r\n    <IonPage>\r\n      <IonHeader>\r\n        <IonToolbar>\r\n          <IonButtons slot=\"start\">\r\n            <IonMenuButton />\r\n          </IonButtons>\r\n          <IonTitle>{name}</IonTitle>\r\n        </IonToolbar>\r\n      </IonHeader>\r\n\r\n      <IonContent fullscreen>\r\n        <IonHeader collapse=\"condense\">\r\n          <IonToolbar>\r\n            <IonTitle size=\"large\">{name}</IonTitle>\r\n          </IonToolbar>\r\n        </IonHeader>\r\n\r\n        <IonContent>\r\n          <IonCard>\r\n            <IonTitle>Gestión de Clientes</IonTitle>\r\n\r\n            <IonItem>\r\n              <IonButton\r\n                onClick={addCustumer}\r\n                color=\"primary\"\r\n                fill=\"solid\"\r\n                slot=\"end\"\r\n                size=\"default\"\r\n              >\r\n                <IonIcon icon={add} />\r\n                Agregar Cliente\r\n              </IonButton>\r\n            </IonItem>\r\n\r\n            <IonGrid className=\"table\">\r\n              <IonRow>\r\n                <IonCol>Nombre</IonCol>\r\n                <IonCol>Email</IonCol>\r\n                <IonCol>Teléfono</IonCol>\r\n                <IonCol>Dirección</IonCol>\r\n                <IonCol>Acciones</IonCol>\r\n              </IonRow>\r\n\r\n              {clientes.map((cliente: Custumer) => (\r\n                <IonRow>\r\n                  <IonCol>\r\n                    {cliente.firstname} {cliente.lastname}\r\n                  </IonCol>\r\n                  <IonCol>{cliente.email}</IonCol>\r\n                  <IonCol>{cliente.phone}</IonCol>\r\n                  <IonCol>{cliente.address}</IonCol>\r\n                  <IonCol>\r\n                    <IonButton\r\n                      onClick={() => editCustumer(String(cliente.id))}\r\n                      color=\"primary\"\r\n                      fill=\"clear\"\r\n                    >\r\n                      <IonIcon icon={pencil} slot=\"icon-only\"></IonIcon>\r\n                    </IonButton>\r\n                    <IonButton\r\n                      onClick={() => remove(String(cliente.id))}\r\n                      color=\"danger\"\r\n                      fill=\"clear\"\r\n                    >\r\n                      <IonIcon icon={close} slot=\"icon-only\"></IonIcon>\r\n                    </IonButton>\r\n                  </IonCol>\r\n                </IonRow>\r\n              ))}\r\n            </IonGrid>\r\n          </IonCard>\r\n        </IonContent>\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default CustumerList;\r\n","import {\r\n  IonButton,\r\n  IonButtons,\r\n  IonCard,\r\n  IonCol,\r\n  IonContent,\r\n  IonHeader,\r\n  IonIcon,\r\n  IonInput,\r\n  IonItem,\r\n  IonLabel,\r\n  IonMenuButton,\r\n  IonPage,\r\n  IonRow,\r\n  IonTitle,\r\n  IonToolbar,\r\n} from \"@ionic/react\";\r\nimport { checkmark } from \"ionicons/icons\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams, useRouteMatch } from \"react-router\";\r\nimport Custumer from \"./Custumer\";\r\nimport { saveCustumer, searchCustumerById } from \"./CustumerApp\";\r\n\r\nconst CustumerEdit: React.FC = () => {\r\n  const { name } = useParams<{ name: string }>();\r\n\r\n  const [custumer, setCustumer] = useState<Custumer>({});\r\n  const history = useHistory();\r\n\r\n  const routeMatch: any = useRouteMatch(\"/page/custumer/:id\");\r\n  const id = routeMatch?.params?.id;\r\n\r\n  useEffect(() => {\r\n    search();\r\n  }, [history.location.pathname]);\r\n\r\n  const search = async () => {\r\n    if (id === \"new\") {\r\n      setCustumer({});\r\n    } else {\r\n      let res = await searchCustumerById(id);\r\n      setCustumer(res);\r\n    }\r\n    // let res = searchCustumers();\r\n    // setClientes(res);\r\n  };\r\n\r\n  const save = async () => {\r\n    await saveCustumer(custumer);\r\n    history.push(\"/page/custumers\");\r\n  };\r\n\r\n  return (\r\n    <IonPage>\r\n      <IonHeader>\r\n        <IonToolbar>\r\n          <IonButtons slot=\"start\">\r\n            <IonMenuButton />\r\n          </IonButtons>\r\n          <IonTitle>{name}</IonTitle>\r\n        </IonToolbar>\r\n      </IonHeader>\r\n\r\n      <IonContent fullscreen>\r\n        <IonHeader collapse=\"condense\">\r\n          <IonToolbar>\r\n            <IonTitle size=\"large\">{name}</IonTitle>\r\n          </IonToolbar>\r\n        </IonHeader>\r\n\r\n        <IonContent>\r\n          <IonCard>\r\n            <IonTitle>\r\n              {\" \"}\r\n              {id === \"new\" ? \"Agregar Cliente\" : \"Editar Cliente\"}\r\n            </IonTitle>\r\n\r\n            <IonRow>\r\n              <IonCol>\r\n                <IonItem>\r\n                  <IonLabel position=\"stacked\">Nombre</IonLabel>\r\n                  <IonInput\r\n                    onIonChange={(e) => {\r\n                      custumer.firstname = String(e.detail.value);\r\n                    }}\r\n                    value={custumer.firstname}\r\n                  >\r\n                    {\" \"}\r\n                  </IonInput>\r\n                </IonItem>\r\n              </IonCol>\r\n\r\n              <IonCol>\r\n                <IonItem>\r\n                  <IonLabel position=\"stacked\">Apellidos</IonLabel>\r\n                  <IonInput\r\n                    onIonChange={(e) => {\r\n                      custumer.lastname = String(e.detail.value);\r\n                    }}\r\n                    value={custumer.lastname}\r\n                  >\r\n                    {\" \"}\r\n                  </IonInput>\r\n                </IonItem>\r\n              </IonCol>\r\n            </IonRow>\r\n\r\n            <IonRow>\r\n              <IonCol>\r\n                <IonItem>\r\n                  <IonLabel position=\"stacked\">Email</IonLabel>\r\n                  <IonInput\r\n                    onIonChange={(e) => {\r\n                      custumer.email = String(e.detail.value);\r\n                    }}\r\n                    value={custumer.email}\r\n                  >\r\n                    {\" \"}\r\n                  </IonInput>\r\n                </IonItem>\r\n              </IonCol>\r\n\r\n              <IonCol>\r\n                <IonItem>\r\n                  <IonLabel position=\"stacked\">Addres</IonLabel>\r\n                  <IonInput\r\n                    onIonChange={(e) => {\r\n                      custumer.address = String(e.detail.value);\r\n                    }}\r\n                    value={custumer.address}\r\n                  >\r\n                    {\" \"}\r\n                  </IonInput>\r\n                </IonItem>\r\n              </IonCol>\r\n            </IonRow>\r\n\r\n            <IonRow>\r\n              <IonCol>\r\n                <IonItem>\r\n                  <IonLabel position=\"stacked\">Telf</IonLabel>\r\n                  <IonInput\r\n                    onIonChange={(e) => {\r\n                      custumer.phone = String(e.detail.value);\r\n                    }}\r\n                    value={custumer.phone}\r\n                  >\r\n                    {\" \"}\r\n                  </IonInput>\r\n                </IonItem>\r\n              </IonCol>\r\n\r\n              <IonCol></IonCol>\r\n            </IonRow>\r\n\r\n            <IonItem>\r\n              <IonButton\r\n                onClick={save}\r\n                color=\"success\"\r\n                fill=\"solid\"\r\n                slot=\"end\"\r\n                size=\"default\"\r\n              >\r\n                <IonIcon icon={checkmark} />\r\n                Guardar\r\n              </IonButton>\r\n            </IonItem>\r\n          </IonCard>\r\n        </IonContent>\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default CustumerEdit;\r\n","import Employee from \"./Employee\";\r\n\r\nexport async function searchEmployees() {\r\n  let url = process.env.REACT_APP_API + \"employees\";\r\n  let response = await fetch(url, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n\r\n  return await response.json();\r\n\r\n  // if (!localStorage[\"employees\"]) {\r\n  //   localStorage[\"employees\"] = \"[]\";\r\n  // }\r\n  // let employees = localStorage[\"employees\"];\r\n\r\n  // employees = JSON.parse(employees);\r\n\r\n  // return employees;\r\n}\r\n\r\nexport async function removeEmployee(id: string) {\r\n  let url = process.env.REACT_APP_API + \"employee/\" + id;\r\n  await fetch(url, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n\r\n  //Para  Local en cache con la web\r\n  // let employees = await searchEmployees();\r\n  // let indice = employees.findIndex((employee: Employee) => employee.id == id);\r\n  // employees.splice(indice, 1);\r\n  // localStorage[\"employees\"] = JSON.stringify(employees);\r\n}\r\n\r\nexport async function saveEmployee(employee: Employee) {\r\n  let url = process.env.REACT_APP_API + \"employee\";\r\n  await fetch(url, {\r\n    method: \"POST\",\r\n    body: JSON.stringify(employee),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n\r\n  //Para  Local en cache con la web\r\n  // let employees = await searchEmployees();\r\n\r\n  // if (employee.id) {\r\n  //   //Editar\r\n  //   let indice = employees.findIndex((c: Employee) => c.id == employee.id);\r\n  //   employees[indice] = employee;\r\n  // } else {\r\n  //   // Nuevo\r\n  //   employee.id = String(Math.round(Math.random() * 100000));\r\n  //   employees.push(employee);\r\n  // }\r\n\r\n  // localStorage[\"employees\"] = JSON.stringify(employees);\r\n}\r\n\r\nexport async function searchEmployeeById(id: string) {\r\n  let url = process.env.REACT_APP_API + \"employee/\" + id;\r\n  let response = await fetch(url, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n\r\n  return await response.json();\r\n\r\n  //Para  Local en cache con la web\r\n  // let employees = await searchEmployees();\r\n\r\n  // return employees.find((employee: any) => {\r\n  //   return employee.id == id;\r\n  // });\r\n}\r\n","import {\r\n  IonButton,\r\n  IonButtons,\r\n  IonCard,\r\n  IonCol,\r\n  IonContent,\r\n  IonGrid,\r\n  IonHeader,\r\n  IonIcon,\r\n  IonItem,\r\n  IonMenuButton,\r\n  IonPage,\r\n  IonRow,\r\n  IonTitle,\r\n  IonToolbar,\r\n} from \"@ionic/react\";\r\nimport { add, close, pencil, sync } from \"ionicons/icons\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport Employee from \"./Employee\";\r\nimport { removeEmployee, searchEmployees } from \"./EmployeeApp\";\r\n\r\nconst EmployeeList: React.FC = () => {\r\n  const { name } = useParams<{ name: string }>();\r\n  const [clientes, setClientes] = useState<Employee[]>([]);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    search();\r\n  }, [history.location.pathname]);\r\n\r\n  const remove = async (id: string) => {\r\n    await removeEmployee(id);\r\n    search();\r\n  };\r\n\r\n  const search = async () => {\r\n    let res = await searchEmployees();\r\n    setClientes(res);\r\n  };\r\n\r\n  const addEmployee = () => {\r\n    history.push(\"/page/employee/new\");\r\n  };\r\n  const editEmployee = (id: string) => {\r\n    history.push(\"/page/employee/\" + id);\r\n  };\r\n\r\n  return (\r\n    <IonPage>\r\n      <IonHeader>\r\n        <IonToolbar>\r\n          <IonButtons slot=\"start\">\r\n            <IonMenuButton />\r\n          </IonButtons>\r\n          <IonTitle>{name}</IonTitle>\r\n        </IonToolbar>\r\n      </IonHeader>\r\n\r\n      <IonContent fullscreen>\r\n        <IonHeader collapse=\"condense\">\r\n          <IonToolbar>\r\n            <IonTitle size=\"large\">{name}</IonTitle>\r\n          </IonToolbar>\r\n        </IonHeader>\r\n\r\n        <IonContent>\r\n          <IonCard>\r\n            <IonTitle>Gestión de Empleados</IonTitle>\r\n\r\n            <IonItem>\r\n              <IonButton\r\n                onClick={addEmployee}\r\n                color=\"primary\"\r\n                fill=\"solid\"\r\n                slot=\"end\"\r\n                size=\"default\"\r\n              >\r\n                <IonIcon icon={add} />\r\n                Agregar Empleado\r\n              </IonButton>\r\n            </IonItem>\r\n\r\n            <IonGrid className=\"table\">\r\n              <IonRow>\r\n                <IonCol>Nombre</IonCol>\r\n                <IonCol>Email</IonCol>\r\n                <IonCol>Teléfono</IonCol>\r\n                <IonCol>Dirección</IonCol>\r\n                <IonCol>Acciones</IonCol>\r\n              </IonRow>\r\n\r\n              {clientes.map((cliente: Employee) => (\r\n                <IonRow>\r\n                  <IonCol>\r\n                    {cliente.firstname} {cliente.lastname}\r\n                  </IonCol>\r\n                  <IonCol>{cliente.email}</IonCol>\r\n                  <IonCol>{cliente.phone}</IonCol>\r\n                  <IonCol>{cliente.address}</IonCol>\r\n                  <IonCol>\r\n                    <IonButton\r\n                      onClick={() => editEmployee(String(cliente.id))}\r\n                      color=\"primary\"\r\n                      fill=\"clear\"\r\n                    >\r\n                      <IonIcon icon={pencil} slot=\"icon-only\"></IonIcon>\r\n                    </IonButton>\r\n                    <IonButton\r\n                      onClick={() => remove(String(cliente.id))}\r\n                      color=\"danger\"\r\n                      fill=\"clear\"\r\n                    >\r\n                      <IonIcon icon={close} slot=\"icon-only\"></IonIcon>\r\n                    </IonButton>\r\n                  </IonCol>\r\n                </IonRow>\r\n              ))}\r\n            </IonGrid>\r\n          </IonCard>\r\n        </IonContent>\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default EmployeeList;\r\n","import {\r\n  IonButton,\r\n  IonButtons,\r\n  IonCard,\r\n  IonCol,\r\n  IonContent,\r\n  IonHeader,\r\n  IonIcon,\r\n  IonInput,\r\n  IonItem,\r\n  IonLabel,\r\n  IonMenuButton,\r\n  IonPage,\r\n  IonRow,\r\n  IonTitle,\r\n  IonToolbar,\r\n} from \"@ionic/react\";\r\nimport { checkmark } from \"ionicons/icons\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams, useRouteMatch } from \"react-router\";\r\nimport Employee from \"./Employee\";\r\nimport { saveEmployee, searchEmployeeById } from \"./EmployeeApp\";\r\n\r\nconst EmployeeEdit: React.FC = () => {\r\n  const { name } = useParams<{ name: string }>();\r\n  const [employee, setEmployee] = useState<Employee>({});\r\n  const history = useHistory();\r\n\r\n  const routeMatch: any = useRouteMatch(\"/page/employee/:id\");\r\n  const id = routeMatch?.params?.id;\r\n\r\n  useEffect(() => {\r\n    search();\r\n  }, [history.location.pathname]);\r\n\r\n  const search = async () => {\r\n    if (id === \"new\") {\r\n      setEmployee({});\r\n    } else {\r\n      let res = await searchEmployeeById(id);\r\n      setEmployee(res);\r\n    }\r\n    // let res = searchCustumers();\r\n    // setClientes(res);\r\n  };\r\n\r\n  const save = async () => {\r\n    await saveEmployee(employee);\r\n    history.push(\"/page/employees\");\r\n  };\r\n\r\n  return (\r\n    <IonPage>\r\n      <IonHeader>\r\n        <IonToolbar>\r\n          <IonButtons slot=\"start\">\r\n            <IonMenuButton />\r\n          </IonButtons>\r\n          <IonTitle>{name}</IonTitle>\r\n        </IonToolbar>\r\n      </IonHeader>\r\n\r\n      <IonContent fullscreen>\r\n        <IonHeader collapse=\"condense\">\r\n          <IonToolbar>\r\n            <IonTitle size=\"large\">{name}</IonTitle>\r\n          </IonToolbar>\r\n        </IonHeader>\r\n\r\n        <IonContent>\r\n          <IonCard>\r\n            <IonTitle>\r\n              {\" \"}\r\n              {id === \"new\" ? \"Agregar Empleado\" : \"Editar Empleado\"}\r\n            </IonTitle>\r\n\r\n            <IonRow>\r\n              <IonCol>\r\n                <IonItem>\r\n                  <IonLabel position=\"stacked\">Nombre</IonLabel>\r\n                  <IonInput\r\n                    onIonChange={(e) => {\r\n                      employee.firstname = String(e.detail.value);\r\n                    }}\r\n                    value={employee.firstname}\r\n                  >\r\n                    {\" \"}\r\n                  </IonInput>\r\n                </IonItem>\r\n              </IonCol>\r\n\r\n              <IonCol>\r\n                <IonItem>\r\n                  <IonLabel position=\"stacked\">Apellidos</IonLabel>\r\n                  <IonInput\r\n                    onIonChange={(e) => {\r\n                      employee.lastname = String(e.detail.value);\r\n                    }}\r\n                    value={employee.lastname}\r\n                  >\r\n                    {\" \"}\r\n                  </IonInput>\r\n                </IonItem>\r\n              </IonCol>\r\n            </IonRow>\r\n\r\n            <IonRow>\r\n              <IonCol>\r\n                <IonItem>\r\n                  <IonLabel position=\"stacked\">Email</IonLabel>\r\n                  <IonInput\r\n                    onIonChange={(e) => {\r\n                      employee.email = String(e.detail.value);\r\n                    }}\r\n                    value={employee.email}\r\n                  >\r\n                    {\" \"}\r\n                  </IonInput>\r\n                </IonItem>\r\n              </IonCol>\r\n\r\n              <IonCol>\r\n                <IonItem>\r\n                  <IonLabel position=\"stacked\">Addres</IonLabel>\r\n                  <IonInput\r\n                    onIonChange={(e) => {\r\n                      employee.address = String(e.detail.value);\r\n                    }}\r\n                    value={employee.address}\r\n                  >\r\n                    {\" \"}\r\n                  </IonInput>\r\n                </IonItem>\r\n              </IonCol>\r\n            </IonRow>\r\n\r\n            <IonRow>\r\n              <IonCol>\r\n                <IonItem>\r\n                  <IonLabel position=\"stacked\">Telf</IonLabel>\r\n                  <IonInput\r\n                    onIonChange={(e) => {\r\n                      employee.phone = String(e.detail.value);\r\n                    }}\r\n                    value={employee.phone}\r\n                  >\r\n                    {\" \"}\r\n                  </IonInput>\r\n                </IonItem>\r\n              </IonCol>\r\n\r\n              <IonCol></IonCol>\r\n            </IonRow>\r\n            <IonRow>\r\n              <IonCol>\r\n                <IonItem>\r\n                  <IonLabel position=\"stacked\">Salary</IonLabel>\r\n                  <IonInput\r\n                    onIonChange={(e) => {\r\n                      employee.salary = Number(e.detail.value);\r\n                    }}\r\n                    value={employee.salary}\r\n                  >\r\n                    {\" \"}\r\n                  </IonInput>\r\n                </IonItem>\r\n              </IonCol>\r\n\r\n              <IonCol></IonCol>\r\n            </IonRow>\r\n\r\n            <IonItem>\r\n              <IonButton\r\n                onClick={save}\r\n                color=\"success\"\r\n                fill=\"solid\"\r\n                slot=\"end\"\r\n                size=\"default\"\r\n              >\r\n                <IonIcon icon={checkmark} />\r\n                Guardar\r\n              </IonButton>\r\n            </IonItem>\r\n          </IonCard>\r\n        </IonContent>\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default EmployeeEdit;\r\n","import Supplier from \"./Supplier\";\r\n\r\nexport async function searchSuppliers() {\r\n  let url = process.env.REACT_APP_API + \"suppliers\";\r\n  let response = await fetch(url, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n\r\n  return await response.json();\r\n\r\n  // if (!localStorage[\"supplier\"]) {\r\n  //   localStorage[\"supplier\"] = \"[]\";\r\n  // }\r\n  // let supplier = localStorage[\"supplier\"];\r\n\r\n  // supplier = JSON.parse(supplier);\r\n\r\n  // return supplier;\r\n}\r\n\r\nexport async function removeSupplier(id: string) {\r\n  let url = process.env.REACT_APP_API + \"supplier/\" + id;\r\n  await fetch(url, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n\r\n  //Para  Local en cache con la web\r\n  // let supplier = await searchSupplier();\r\n  // let indice = supplier.findIndex((supplier: Supplier) => supplier.id == id);\r\n  // supplier.splice(indice, 1);\r\n  // localStorage[\"supplier\"] = JSON.stringify(supplier);\r\n}\r\n\r\nexport async function saveSupplier(supplier: Supplier) {\r\n  let url = process.env.REACT_APP_API + \"supplier\";\r\n  await fetch(url, {\r\n    method: \"POST\",\r\n    body: JSON.stringify(supplier),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n\r\n  //Para  Local en cache con la web\r\n  // let supplier = await searchSupplier();\r\n\r\n  // if (supplier.id) {\r\n  //   //Editar\r\n  //   let indice = supplier.findIndex((c: Supplier) => c.id == supplier.id);\r\n  //   supplier[indice] = supplier;\r\n  // } else {\r\n  //   // Nuevo\r\n  //   supplier.id = String(Math.round(Math.random() * 100000));\r\n  //   supplier.push(supplier);\r\n  // }\r\n\r\n  // localStorage[\"supplier\"] = JSON.stringify(supplier);\r\n}\r\n\r\nexport async function searchSupplierById(id: string) {\r\n  let url = process.env.REACT_APP_API + \"supplier/\" + id;\r\n  let response = await fetch(url, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n\r\n  return await response.json();\r\n\r\n  //Para  Local en cache con la web\r\n  // let supplier = await searchSupplier();\r\n\r\n  // return supplier.find((supplier: any) => {\r\n  //   return supplier.id == id;\r\n  // });\r\n}\r\n","import {\r\n  IonButton,\r\n  IonButtons,\r\n  IonCard,\r\n  IonCol,\r\n  IonContent,\r\n  IonHeader,\r\n  IonIcon,\r\n  IonInput,\r\n  IonItem,\r\n  IonLabel,\r\n  IonMenuButton,\r\n  IonPage,\r\n  IonRow,\r\n  IonTitle,\r\n  IonToolbar,\r\n} from \"@ionic/react\";\r\nimport { checkmark } from \"ionicons/icons\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams, useRouteMatch } from \"react-router\";\r\nimport Supplier from \"./Supplier\";\r\nimport { saveSupplier, searchSupplierById } from \"./SupplierApp\";\r\n\r\nconst SupplierEdit: React.FC = () => {\r\n  const { name } = useParams<{ name: string }>();\r\n  const [supplier, setSupplier] = useState<Supplier>({});\r\n  const history = useHistory();\r\n\r\n  const routeMatch: any = useRouteMatch(\"/page/supplier/:id\");\r\n  const id = routeMatch?.params?.id;\r\n\r\n  useEffect(() => {\r\n    search();\r\n  }, [history.location.pathname]);\r\n\r\n  const search = async () => {\r\n    if (id === \"new\") {\r\n      setSupplier({});\r\n    } else {\r\n      let res = await searchSupplierById(id);\r\n      setSupplier(res);\r\n    }\r\n    // let res = searchCustumers();\r\n    // setClientes(res);\r\n  };\r\n\r\n  const save = async () => {\r\n    await saveSupplier(supplier);\r\n    history.push(\"/page/suppliers\");\r\n  };\r\n\r\n  return (\r\n    <IonPage>\r\n      <IonHeader>\r\n        <IonToolbar>\r\n          <IonButtons slot=\"start\">\r\n            <IonMenuButton />\r\n          </IonButtons>\r\n          <IonTitle>{name}</IonTitle>\r\n        </IonToolbar>\r\n      </IonHeader>\r\n\r\n      <IonContent fullscreen>\r\n        <IonHeader collapse=\"condense\">\r\n          <IonToolbar>\r\n            <IonTitle size=\"large\">{name}</IonTitle>\r\n          </IonToolbar>\r\n        </IonHeader>\r\n\r\n        <IonContent>\r\n          <IonCard>\r\n            <IonTitle>\r\n              {\" \"}\r\n              {id === \"new\" ? \"Agregar Proveedor\" : \"Editar Proveedor\"}\r\n            </IonTitle>\r\n\r\n            <IonRow>\r\n              <IonCol>\r\n                <IonItem>\r\n                  <IonLabel position=\"stacked\">Nombre</IonLabel>\r\n                  <IonInput\r\n                    onIonChange={(e) => {\r\n                      supplier.name = String(e.detail.value);\r\n                    }}\r\n                    value={supplier.name}\r\n                  >\r\n                    {\" \"}\r\n                  </IonInput>\r\n                </IonItem>\r\n              </IonCol>\r\n\r\n              <IonCol>\r\n                <IonItem>\r\n                  <IonLabel position=\"stacked\">Contacto</IonLabel>\r\n                  <IonInput\r\n                    onIonChange={(e) => {\r\n                      supplier.contact = String(e.detail.value);\r\n                    }}\r\n                    value={supplier.contact}\r\n                  >\r\n                    {\" \"}\r\n                  </IonInput>\r\n                </IonItem>\r\n              </IonCol>\r\n            </IonRow>\r\n\r\n            <IonRow>\r\n              <IonCol>\r\n                <IonItem>\r\n                  <IonLabel position=\"stacked\">Email</IonLabel>\r\n                  <IonInput\r\n                    onIonChange={(e) => {\r\n                      supplier.email = String(e.detail.value);\r\n                    }}\r\n                    value={supplier.email}\r\n                  >\r\n                    {\" \"}\r\n                  </IonInput>\r\n                </IonItem>\r\n              </IonCol>\r\n\r\n              <IonCol>\r\n                <IonItem>\r\n                  <IonLabel position=\"stacked\">Addres</IonLabel>\r\n                  <IonInput\r\n                    onIonChange={(e) => {\r\n                      supplier.address = String(e.detail.value);\r\n                    }}\r\n                    value={supplier.address}\r\n                  >\r\n                    {\" \"}\r\n                  </IonInput>\r\n                </IonItem>\r\n              </IonCol>\r\n            </IonRow>\r\n\r\n            <IonRow>\r\n              <IonCol>\r\n                <IonItem>\r\n                  <IonLabel position=\"stacked\">Telf</IonLabel>\r\n                  <IonInput\r\n                    onIonChange={(e) => {\r\n                      supplier.phone = String(e.detail.value);\r\n                    }}\r\n                    value={supplier.phone}\r\n                  >\r\n                    {\" \"}\r\n                  </IonInput>\r\n                </IonItem>\r\n              </IonCol>\r\n            </IonRow>\r\n            <IonRow>\r\n              <IonCol>\r\n                <IonItem>\r\n                  <IonLabel position=\"stacked\">Web</IonLabel>\r\n                  <IonInput\r\n                    onIonChange={(e) => {\r\n                      supplier.web = String(e.detail.value);\r\n                    }}\r\n                    value={supplier.web}\r\n                  >\r\n                    {\" \"}\r\n                  </IonInput>\r\n                </IonItem>\r\n              </IonCol>\r\n            </IonRow>\r\n\r\n            <IonItem>\r\n              <IonButton\r\n                onClick={save}\r\n                color=\"success\"\r\n                fill=\"solid\"\r\n                slot=\"end\"\r\n                size=\"default\"\r\n              >\r\n                <IonIcon icon={checkmark} />\r\n                Guardar\r\n              </IonButton>\r\n            </IonItem>\r\n          </IonCard>\r\n        </IonContent>\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default SupplierEdit;\r\n","import {\r\n  IonButton,\r\n  IonButtons,\r\n  IonCard,\r\n  IonCol,\r\n  IonContent,\r\n  IonGrid,\r\n  IonHeader,\r\n  IonIcon,\r\n  IonItem,\r\n  IonMenuButton,\r\n  IonPage,\r\n  IonRow,\r\n  IonTitle,\r\n  IonToolbar,\r\n} from \"@ionic/react\";\r\nimport { add, close, pencil } from \"ionicons/icons\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport Supplier from \"./Supplier\";\r\nimport { removeSupplier, searchSuppliers } from \"./SupplierApp\";\r\n\r\nconst SupplierList: React.FC = () => {\r\n  const { name } = useParams<{ name: string }>();\r\n  const [clientes, setClientes] = useState<Supplier[]>([]);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    search();\r\n  }, [history.location.pathname]);\r\n\r\n  const remove = async (id: string) => {\r\n    await removeSupplier(id);\r\n    search();\r\n  };\r\n\r\n  const search = async () => {\r\n    let res = await searchSuppliers();\r\n    setClientes(res);\r\n  };\r\n\r\n  const addSupplier = () => {\r\n    history.push(\"/page/supplier/new\");\r\n  };\r\n\r\n  const editSupplier = (id: string) => {\r\n    history.push(\"/page/supplier/\" + id);\r\n  };\r\n\r\n  return (\r\n    <IonPage>\r\n      <IonHeader>\r\n        <IonToolbar>\r\n          <IonButtons slot=\"start\">\r\n            <IonMenuButton />\r\n          </IonButtons>\r\n          <IonTitle>{name}</IonTitle>\r\n        </IonToolbar>\r\n      </IonHeader>\r\n\r\n      <IonContent fullscreen>\r\n        <IonHeader collapse=\"condense\">\r\n          <IonToolbar>\r\n            <IonTitle size=\"large\">{name}</IonTitle>\r\n          </IonToolbar>\r\n        </IonHeader>\r\n\r\n        <IonContent>\r\n          <IonCard>\r\n            <IonTitle>Gestión de Proveedores</IonTitle>\r\n\r\n            <IonItem>\r\n              <IonButton\r\n                onClick={addSupplier}\r\n                color=\"primary\"\r\n                fill=\"solid\"\r\n                slot=\"end\"\r\n                size=\"default\"\r\n              >\r\n                <IonIcon icon={add} />\r\n                Agregar Proveedor\r\n              </IonButton>\r\n            </IonItem>\r\n\r\n            <IonGrid className=\"table\">\r\n              <IonRow>\r\n                <IonCol>Nombre</IonCol>\r\n                <IonCol>Email</IonCol>\r\n                <IonCol>Teléfono</IonCol>\r\n                <IonCol>Web</IonCol>\r\n                <IonCol>Acciones</IonCol>\r\n              </IonRow>\r\n\r\n              {clientes.map((cliente: Supplier) => (\r\n                <IonRow>\r\n                  <IonCol>{cliente.name}</IonCol>\r\n                  <IonCol>{cliente.email}</IonCol>\r\n                  <IonCol>{cliente.phone}</IonCol>\r\n                  <IonCol>{cliente.web}</IonCol>\r\n                  <IonCol>\r\n                    <IonButton\r\n                      onClick={() => editSupplier(String(cliente.id))}\r\n                      color=\"primary\"\r\n                      fill=\"clear\"\r\n                    >\r\n                      <IonIcon icon={pencil} slot=\"icon-only\"></IonIcon>\r\n                    </IonButton>\r\n                    <IonButton\r\n                      onClick={() => remove(String(cliente.id))}\r\n                      color=\"danger\"\r\n                      fill=\"clear\"\r\n                    >\r\n                      <IonIcon icon={close} slot=\"icon-only\"></IonIcon>\r\n                    </IonButton>\r\n                  </IonCol>\r\n                </IonRow>\r\n              ))}\r\n            </IonGrid>\r\n          </IonCard>\r\n        </IonContent>\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default SupplierList;\r\n","import {\r\n  IonApp,\r\n  IonRouterOutlet,\r\n  IonSplitPane,\r\n  setupIonicReact,\r\n} from \"@ionic/react\";\r\nimport { IonReactHashRouter, IonReactRouter } from \"@ionic/react-router\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport Menu from \"./components/Menu\";\r\nimport Page from \"./pages/Page\";\r\n\r\n/* Core CSS required for Ionic components to work properly */\r\nimport \"@ionic/react/css/core.css\";\r\n\r\n/* Basic CSS for apps built with Ionic */\r\nimport \"@ionic/react/css/normalize.css\";\r\nimport \"@ionic/react/css/structure.css\";\r\nimport \"@ionic/react/css/typography.css\";\r\n\r\n/* Optional CSS utils that can be commented out */\r\nimport \"@ionic/react/css/padding.css\";\r\nimport \"@ionic/react/css/float-elements.css\";\r\nimport \"@ionic/react/css/text-alignment.css\";\r\nimport \"@ionic/react/css/text-transformation.css\";\r\nimport \"@ionic/react/css/flex-utils.css\";\r\nimport \"@ionic/react/css/display.css\";\r\n\r\n/* Theme variables */\r\nimport \"./theme/variables.css\";\r\nimport CustumerList from \"./pages/custumer/CustumerList\";\r\nimport CustumerEdit from \"./pages/custumer/CustumerEdit\";\r\nimport EmployeeList from \"./pages/employee/EmployeeList\";\r\nimport EmployeeEdit from \"./pages/employee/EmployeeEdit\";\r\nimport SupplierEdit from \"./pages/supplier/SupplierEdit\";\r\nimport SupplierList from \"./pages/supplier/SupplierList\";\r\n\r\nsetupIonicReact();\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <IonApp>\r\n      <IonReactHashRouter>\r\n        <IonSplitPane contentId=\"main\">\r\n          <Menu />\r\n          <IonRouterOutlet id=\"main\">\r\n            <Route path=\"/\" exact={true}>\r\n              <Redirect to=\"/page/Inbox\" />\r\n            </Route>\r\n\r\n            <Route path=\"/page/custumers/\" exact={true}>\r\n              <CustumerList></CustumerList>\r\n            </Route>\r\n\r\n            <Route path=\"/page/custumer/:id\" exact={true}>\r\n              <CustumerEdit></CustumerEdit>\r\n            </Route>\r\n\r\n            <Route path=\"/page/employees/\" exact={true}>\r\n              <EmployeeList></EmployeeList>\r\n            </Route>\r\n\r\n            <Route path=\"/page/employee/:id\" exact={true}>\r\n              <EmployeeEdit></EmployeeEdit>\r\n            </Route>\r\n\r\n            <Route path=\"/page/suppliers/\" exact={true}>\r\n              <SupplierList></SupplierList>\r\n            </Route>\r\n\r\n            <Route path=\"/page/supplier/:id\" exact={true}>\r\n              <SupplierEdit></SupplierEdit>\r\n            </Route>\r\n          </IonRouterOutlet>\r\n        </IonSplitPane>\r\n      </IonReactHashRouter>\r\n    </IonApp>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}